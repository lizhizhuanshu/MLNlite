plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.kapt)
}

android {
    namespace 'com.immomo.demo'
    compileSdk project.compileSdkVersion
    defaultConfig {
        minSdk project.minSdkVersion
        targetSdk project.targetSdkVersion
        applicationId "com.autolua.mln_lite"
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}



def sourceDirs = [
        "../mlncore/build/outputs/aar/",
        "../mlnservice/build/outputs/aar/",
        "../HotReload_Adapter/build/outputs/aar/",
        "../annotation/build/libs",
        "../processor/build/libs"
]

def destDir = "build/outputs/dev/"

tasks.register('copyLibs', Copy) {
    sourceDirs.each { dir ->
        from(dir) {
            include '**/*.aar'
            include '**/*.jar'
        }
    }
    into "${destDir}libs/"
}

def currentVersion = android.defaultConfig.versionName
tasks.register("createDevZip",Zip){
    dependsOn('copyLibs')
    def fileName = "MLN_Lite_dev_${currentVersion}.zip"
    def zipFile = file("${destDir}${fileName}")
    zipFile.delete()
    from "${destDir}libs/"
    archiveFileName = fileName
    destinationDirectory = file(destDir)
}



dependencies {

    implementation libs.appcompat
    implementation libs.material

    implementation 'com.alibaba:fastjson:1.1.46.android'
    implementation 'com.github.bumptech.glide:glide:4.6.1'
    api "com.caverock:androidsvg:1.4"
    annotationProcessor 'com.github.bumptech.glide:compiler:4.6.1'
    implementation libs.legacy.support.v4
    implementation libs.protobuf.lite
    implementation libs.kotlin.stdlib
    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.android

    implementation project(':scan')
    implementation project(':mlncore')
    implementation project(':mlnservice')
    implementation project(':HotReload_Adapter')
    implementation project(':annotation')
    kapt project(':processor')


    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
}